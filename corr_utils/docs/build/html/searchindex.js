Search.setIndex({"docnames": ["corr_utils", "index"], "filenames": ["corr_utils.rst", "index.rst"], "titles": ["corr_utils package", "CORR-Utils Documentation"], "terms": {"set_default_kei": [0, 1], "kei": 0, "str": 0, "case_id": 0, "none": 0, "sourc": 0, "set": 0, "default": 0, "merg": 0, "oper": 0, "paramet": 0, "The": 0, "return": 0, "connect_impala": [0, 1], "remote_hostnam": 0, "usernam": 0, "tupl": 0, "connect": 0, "impala": 0, "specifi": 0, "server": 0, "hostnam": 0, "e": 0, "g": 0, "hdl": 0, "edge01": 0, "charit": 0, "de": 0, "charit\u00e9": 0, "A": 0, "contain": 0, "object": 0, "i": 0, "success": 0, "error": 0, "type": 0, "pexpect": 0, "except": 0, "exceptionpexpect": 0, "disconnect_impala": [0, 1], "conn": 0, "disconnect": 0, "from": 0, "pipelin": 0, "py": 0, "sqlite3": 0, "databas": 0, "get_impala_df": [0, 1], "tabl": 0, "limit": 0, "int": 0, "where": 0, "datafram": 0, "data": 0, "name": 0, "option": 0, "reduc": 0, "amount": 0, "row": 0, "custom": [0, 1], "queri": 0, "panda": 0, "class": 0, "aggregationmethod": [0, 1], "valu": 0, "base": 0, "enum": 0, "an": 0, "enumer": 0, "maximum": [0, 1], "3": 0, "median": [0, 1], "2": 0, "minimum": [0, 1], "1": 0, "sum": [0, 1], "4": 0, "add_missing_column": [0, 1], "df": 0, "df_to_add": 0, "add": 0, "miss": 0, "column": 0, "given": 0, "other": 0, "default_kei": 0, "pd": 0, "all": 0, "had": 0, "been": 0, "aggregate_data": [0, 1], "method": 0, "renam": 0, "bool": 0, "fals": 0, "calcul": 0, "desir": 0, "statist": 0, "each": 0, "aggreg": 0, "clean_valu": [0, 1], "reference_valu": 0, "drop_row": 0, "clean": 0, "clinic": 0, "implaus": 0, "definit": 0, "nan": 0, "otherwis": 0, "path": 0, "csv": 0, "file": 0, "min": 0, "max": 0, "variabl": 0, "min_valu": 0, "max_valu": 0, "drop": 0, "collect_subgroup": [0, 1], "condit": 0, "list": 0, "dict": 0, "collect": 0, "subgroup": 0, "indic": 0, "work": 0, "create_subgroup": [0, 1], "appli": 0, "format": 0, "lambda": 0, "function": 0, "combine_date_tim": [0, 1], "date_column": 0, "time_column": 0, "new_nam": 0, "combin": 0, "date": 0, "time": 0, "singular": 0, "inform": 0, "assign": 0, "new": 0, "creat": 0, "input": 0, "one": 0, "hot": 0, "encod": 0, "exclude_row": [0, 1], "item": 0, "filter_oper": 0, "remov": 0, "also": 0, "print": 0, "number": 0, "note": 0, "might": 0, "exclud": 0, "filter": 0, "must": 0, "onli": 0, "provid": [0, 1], "If": 0, "true": 0, "after": 0, "specfi": 0, "thi": 0, "ge": 0, "le": 0, "gt": 0, "lt": 0, "us": 0, "extract_by_prior": [0, 1], "priority_ord": 0, "prioriti": 0, "keep": 0, "first": 0, "instanc": 0, "order": 0, "origin": 0, "extract_csv_data": [0, 1], "d_path": 0, "f_name": 0, "delimit": 0, "col_dict": 0, "filter_dict": 0, "exact_match": 0, "remove_prefix": 0, "directori": 0, "dictionari": 0, "map": 0, "ar": 0, "mai": 0, "includ": 0, "regex": 0, "pattern": 0, "perform": 0, "exact": 0, "match": 0, "when": 0, "prefix": 0, "extract_df_data": [0, 1], "core": 0, "frame": 0, "extract_sql_data": [0, 1], "db": 0, "sql": 0, "filter_time_around": [0, 1], "time_reference_db": 0, "time_reference_db_column": 0, "time_lower_bound": 0, "0": 0, "time_upper_bound": 0, "differ": 0, "refer": 0, "lower": 0, "bound": 0, "minut": 0, "upper": 0, "": 0, "addit": 0, "time_differ": 0, "filter_time_between": [0, 1], "df_time_refer": 0, "df_time_reference_column_upper_bound": 0, "merge_on": 0, "between": 0, "df_time_reference_column_lower_bound": 0, "comparison": 0, "two": 0, "repres": 0, "check": 0, "befor": 0, "correspond": 0, "get_amount_removed_row": [0, 1], "initi": 0, "percentag": 0, "ad": 0, "get_eda_metr": [0, 1], "exploratori": 0, "eda": 0, "metric": 0, "which": 0, "comput": 0, "handle_dupl": [0, 1], "drop_dupl": 0, "test": 0, "handl": 0, "duplic": 0, "occurr": 0, "whether": 0, "purpos": 0, "model": [0, 1], "select": 0, "sklearn": [0, 1], "predict": 0, "task": 0, "stat": [0, 1], "statsmodel": 0, "more": 0, "approach": 0, "convert_scor": [0, 1], "original_scor": 0, "new_scor": 0, "convert": 0, "score": 0, "back": 0, "same": 0, "build": 0, "group": 0, "old": 0, "evaluate_subgroup": [0, 1], "score_column": 0, "outcome_column": 0, "test_siz": 0, "dca_y_limit": 0, "01": 0, "02": 0, "dca_threshold": 0, "ndarrai": 0, "arrai": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "categorical_column": 0, "calculate_proba": 0, "valid": 0, "import": 0, "outcom": 0, "float": 0, "proport": 0, "dataset": 0, "split": 0, "y": 0, "axi": 0, "decis": 0, "curv": 0, "dca": 0, "plot": 0, "np": 0, "threshold": 0, "arang": 0, "10": 0, "consid": 0, "categor": 0, "probabl": 0, "result": 0, "get_auprc": [0, 1], "precis": 0, "recal": 0, "prc": 0, "auc": 0, "score_columsn": 0, "label_nam": 0, "label": 0, "legend": 0, "get_auroc": [0, 1], "roc": 0, "get_brier": [0, 1], "calculate_prob": 0, "brier": 0, "get_brier_skil": [0, 1], "skill": 0, "get_calibr": [0, 1], "calibr": 0, "slope": 0, "intercept": 0, "get_confidence_interv": [0, 1], "confound": 0, "show_regress": 0, "confid": 0, "interv": 0, "ci": 0, "around": 0, "modifi": 0, "place": 0, "allow": 0, "show": 0, "regress": 0, "get_dca": [0, 1], "y_limit": 0, "get_important_featur": [0, 1], "feature_column": 0, "n_featur": 0, "get": 0, "most": 0, "featur": 0, "mean": 0, "recurs": 0, "elimin": 0, "rfe": 0, "au": 0, "get_prob": [0, 1], "get_probabilities_for_cohort": [0, 1], "get_regress": [0, 1], "x": 0, "seri": 0, "use_lasso": 0, "scale_data": 0, "selected_model": 0, "train": [0, 1], "logist": 0, "target": 0, "titl": 0, "regular": 0, "lasso": 0, "scale": 0, "rang": 0, "weight": 0, "get_score_regress": [0, 1], "its": 0, "get_test_data": [0, 1], "wa": 0, "get_train_data": [0, 1], "load_weight": [0, 1], "weight_column": 0, "normalized_weight": 0, "load": 0, "unfound": 0, "normalize_weight": [0, 1], "save_to": 0, "normal": 0, "rel": 0, "smallest": 0, "non": 0, "zero": 0, "absolut": 0, "insid": 0, "should": 0, "save": 0, "prepare_regression_data": [0, 1], "df_input_data": 0, "prepar": 0, "validate_scor": [0, 1], "architectur": 0, "resnet": [0, 1], "neuralnetwork": [0, 1], "in_featur": 0, "h1": 0, "16": 0, "h2": 0, "h3": 0, "out_featur": 0, "fulli": 0, "neural": 0, "network": 0, "neuron": 0, "hidden": 0, "layer": 0, "second": 0, "third": 0, "output": 0, "forward": [0, 1], "defin": 0, "everi": 0, "call": 0, "overridden": 0, "subclass": 0, "although": 0, "recip": 0, "pass": 0, "need": 0, "within": 0, "afterward": 0, "instead": 0, "sinc": 0, "former": 0, "take": 0, "care": 0, "run": 0, "regist": 0, "hook": 0, "while": 0, "latter": 0, "silent": 0, "ignor": 0, "them": 0, "num_class": 0, "evalu": [0, 1], "x_train": 0, "tensor": 0, "y_train": 0, "x_test": 0, "y_test": 0, "torch": 0, "export_model_st": [0, 1], "export": 0, "state": 0, "well": 0, "onnx": 0, "get_automl": [0, 1], "model_nam": 0, "automl": 0, "pycaret": 0, "http": 0, "github": 0, "com": 0, "compar": 0, "best": 0, "found": 0, "get_class_weight": [0, 1], "imbalanc": 0, "labl": 0, "gener": 0, "displai": 0, "histogram": 0, "get_model": [0, 1], "class_weights_tensor": 0, "instanti": 0, "criterion": 0, "optim": 0, "get_predict": [0, 1], "get_weight": [0, 1], "retriev": 0, "import_model": [0, 1], "load_automl": [0, 1], "preprocess": [0, 1], "resampl": 0, "floattensor": 0, "longtensor": 0, "random": 0, "oversampl": 0, "pytorch": 0, "epoch": 0, "100": 0, "loss": 0, "gradient": 0, "descent": 0, "over": 0, "wrapper": [0, 1], "corr_util": 1, "packag": 1, "extract": 1, "modul": 1, "covari": 1, "analysi": 1, "ml": 1, "beta": 1, "do": 1, "feel": 1, "encourag": 1, "feedback": 1, "here": 1}, "objects": {"": [[0, 0, 0, "-", "corr_utils"]], "corr_utils": [[0, 0, 0, "-", "analysis"], [0, 0, 0, "-", "covariate"], [0, 0, 0, "-", "extraction"], [0, 0, 0, "-", "ml"], [0, 3, 1, "", "set_default_key"]], "corr_utils.analysis": [[0, 1, 1, "", "Model"], [0, 3, 1, "", "convert_score"], [0, 3, 1, "", "evaluate_subgroups"], [0, 3, 1, "", "get_auprc"], [0, 3, 1, "", "get_auroc"], [0, 3, 1, "", "get_brier"], [0, 3, 1, "", "get_brier_skill"], [0, 3, 1, "", "get_calibration"], [0, 3, 1, "", "get_confidence_intervals"], [0, 3, 1, "", "get_dca"], [0, 3, 1, "", "get_important_features"], [0, 3, 1, "", "get_probabilities"], [0, 3, 1, "", "get_probabilities_for_cohort"], [0, 3, 1, "", "get_regression"], [0, 3, 1, "", "get_score_regression"], [0, 3, 1, "", "get_test_data"], [0, 3, 1, "", "get_train_data"], [0, 3, 1, "", "load_weights"], [0, 3, 1, "", "normalize_weights"], [0, 3, 1, "", "prepare_regression_data"], [0, 3, 1, "", "validate_score"]], "corr_utils.analysis.Model": [[0, 2, 1, "", "SKLEARN"], [0, 2, 1, "", "STATS"]], "corr_utils.covariate": [[0, 1, 1, "", "AggregationMethod"], [0, 3, 1, "", "add_missing_columns"], [0, 3, 1, "", "aggregate_data"], [0, 3, 1, "", "clean_values"], [0, 3, 1, "", "collect_subgroups"], [0, 3, 1, "", "combine_date_time"], [0, 3, 1, "", "create_subgroups"], [0, 3, 1, "", "exclude_rows"], [0, 3, 1, "", "extract_by_priority"], [0, 3, 1, "", "extract_csv_data"], [0, 3, 1, "", "extract_df_data"], [0, 3, 1, "", "extract_sql_data"], [0, 3, 1, "", "filter_time_around"], [0, 3, 1, "", "filter_time_between"], [0, 3, 1, "", "get_amount_removed_rows"], [0, 3, 1, "", "get_eda_metrics"], [0, 3, 1, "", "handle_duplicates"]], "corr_utils.covariate.AggregationMethod": [[0, 2, 1, "", "MAXIMUM"], [0, 2, 1, "", "MEDIAN"], [0, 2, 1, "", "MINIMUM"], [0, 2, 1, "", "SUM"]], "corr_utils.extraction": [[0, 3, 1, "", "connect_impala"], [0, 3, 1, "", "disconnect_impala"], [0, 3, 1, "", "get_impala_df"]], "corr_utils.ml": [[0, 1, 1, "", "Model"], [0, 1, 1, "", "NeuralNetwork"], [0, 1, 1, "", "ResNet"], [0, 3, 1, "", "evaluate"], [0, 3, 1, "", "export_model_state"], [0, 3, 1, "", "get_autoML"], [0, 3, 1, "", "get_class_weights"], [0, 3, 1, "", "get_eda_metrics"], [0, 3, 1, "", "get_model"], [0, 3, 1, "", "get_prediction"], [0, 3, 1, "", "get_weights"], [0, 3, 1, "", "import_model"], [0, 3, 1, "", "load_autoML"], [0, 3, 1, "", "preprocessing"], [0, 3, 1, "", "train"], [0, 3, 1, "", "wrapper"]], "corr_utils.ml.Model": [[0, 2, 1, "", "CUSTOM"], [0, 2, 1, "", "RESNET"]], "corr_utils.ml.NeuralNetwork": [[0, 4, 1, "", "forward"], [0, 2, 1, "", "training"]], "corr_utils.ml.ResNet": [[0, 4, 1, "", "forward"], [0, 2, 1, "", "training"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"]}, "titleterms": {"corr_util": 0, "packag": 0, "extract": 0, "modul": 0, "covari": 0, "analysi": 0, "ml": 0, "beta": 0, "corr": 1, "util": 1, "document": 1}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"corr_utils package": [[0, "module-corr_utils"]], "corr_utils.extraction module": [[0, "corr-utils-extraction-module"]], "corr_utils.covariate module": [[0, "module-corr_utils.covariate"]], "corr_utils.analysis module": [[0, "module-corr_utils.analysis"]], "corr_utils.ml module (beta)": [[0, "module-corr_utils.ml"]], "CORR-Utils Documentation": [[1, "corr-utils-documentation"]]}, "indexentries": {"aggregationmethod (class in corr_utils.covariate)": [[0, "corr_utils.covariate.AggregationMethod"]], "custom (corr_utils.ml.model attribute)": [[0, "corr_utils.ml.Model.CUSTOM"]], "maximum (corr_utils.covariate.aggregationmethod attribute)": [[0, "corr_utils.covariate.AggregationMethod.MAXIMUM"]], "median (corr_utils.covariate.aggregationmethod attribute)": [[0, "corr_utils.covariate.AggregationMethod.MEDIAN"]], "minimum (corr_utils.covariate.aggregationmethod attribute)": [[0, "corr_utils.covariate.AggregationMethod.MINIMUM"]], "model (class in corr_utils.analysis)": [[0, "corr_utils.analysis.Model"]], "model (class in corr_utils.ml)": [[0, "corr_utils.ml.Model"]], "neuralnetwork (class in corr_utils.ml)": [[0, "corr_utils.ml.NeuralNetwork"]], "resnet (corr_utils.ml.model attribute)": [[0, "corr_utils.ml.Model.RESNET"]], "resnet (class in corr_utils.ml)": [[0, "corr_utils.ml.ResNet"]], "sklearn (corr_utils.analysis.model attribute)": [[0, "corr_utils.analysis.Model.SKLEARN"]], "stats (corr_utils.analysis.model attribute)": [[0, "corr_utils.analysis.Model.STATS"]], "sum (corr_utils.covariate.aggregationmethod attribute)": [[0, "corr_utils.covariate.AggregationMethod.SUM"]], "add_missing_columns() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.add_missing_columns"]], "aggregate_data() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.aggregate_data"]], "clean_values() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.clean_values"]], "collect_subgroups() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.collect_subgroups"]], "combine_date_time() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.combine_date_time"]], "connect_impala() (in module corr_utils.extraction)": [[0, "corr_utils.extraction.connect_impala"]], "convert_score() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.convert_score"]], "corr_utils": [[0, "module-corr_utils"]], "corr_utils.analysis": [[0, "module-corr_utils.analysis"]], "corr_utils.covariate": [[0, "module-corr_utils.covariate"]], "corr_utils.extraction": [[0, "module-corr_utils.extraction"]], "corr_utils.ml": [[0, "module-corr_utils.ml"]], "create_subgroups() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.create_subgroups"]], "disconnect_impala() (in module corr_utils.extraction)": [[0, "corr_utils.extraction.disconnect_impala"]], "evaluate() (in module corr_utils.ml)": [[0, "corr_utils.ml.evaluate"]], "evaluate_subgroups() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.evaluate_subgroups"]], "exclude_rows() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.exclude_rows"]], "export_model_state() (in module corr_utils.ml)": [[0, "corr_utils.ml.export_model_state"]], "extract_by_priority() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.extract_by_priority"]], "extract_csv_data() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.extract_csv_data"]], "extract_df_data() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.extract_df_data"]], "extract_sql_data() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.extract_sql_data"]], "filter_time_around() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.filter_time_around"]], "filter_time_between() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.filter_time_between"]], "forward() (corr_utils.ml.neuralnetwork method)": [[0, "corr_utils.ml.NeuralNetwork.forward"]], "forward() (corr_utils.ml.resnet method)": [[0, "corr_utils.ml.ResNet.forward"]], "get_amount_removed_rows() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.get_amount_removed_rows"]], "get_auprc() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_auprc"]], "get_auroc() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_auroc"]], "get_automl() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_autoML"]], "get_brier() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_brier"]], "get_brier_skill() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_brier_skill"]], "get_calibration() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_calibration"]], "get_class_weights() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_class_weights"]], "get_confidence_intervals() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_confidence_intervals"]], "get_dca() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_dca"]], "get_eda_metrics() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.get_eda_metrics"]], "get_eda_metrics() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_eda_metrics"]], "get_impala_df() (in module corr_utils.extraction)": [[0, "corr_utils.extraction.get_impala_df"]], "get_important_features() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_important_features"]], "get_model() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_model"]], "get_prediction() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_prediction"]], "get_probabilities() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_probabilities"]], "get_probabilities_for_cohort() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_probabilities_for_cohort"]], "get_regression() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_regression"]], "get_score_regression() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_score_regression"]], "get_test_data() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_test_data"]], "get_train_data() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.get_train_data"]], "get_weights() (in module corr_utils.ml)": [[0, "corr_utils.ml.get_weights"]], "handle_duplicates() (in module corr_utils.covariate)": [[0, "corr_utils.covariate.handle_duplicates"]], "import_model() (in module corr_utils.ml)": [[0, "corr_utils.ml.import_model"]], "load_automl() (in module corr_utils.ml)": [[0, "corr_utils.ml.load_autoML"]], "load_weights() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.load_weights"]], "module": [[0, "module-corr_utils"], [0, "module-corr_utils.analysis"], [0, "module-corr_utils.covariate"], [0, "module-corr_utils.extraction"], [0, "module-corr_utils.ml"]], "normalize_weights() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.normalize_weights"]], "prepare_regression_data() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.prepare_regression_data"]], "preprocessing() (in module corr_utils.ml)": [[0, "corr_utils.ml.preprocessing"]], "set_default_key() (in module corr_utils)": [[0, "corr_utils.set_default_key"]], "train() (in module corr_utils.ml)": [[0, "corr_utils.ml.train"]], "training (corr_utils.ml.neuralnetwork attribute)": [[0, "corr_utils.ml.NeuralNetwork.training"]], "training (corr_utils.ml.resnet attribute)": [[0, "corr_utils.ml.ResNet.training"]], "validate_score() (in module corr_utils.analysis)": [[0, "corr_utils.analysis.validate_score"]], "wrapper() (in module corr_utils.ml)": [[0, "corr_utils.ml.wrapper"]]}})